%% Capstone MATLAB for Graph and Extrapolation by Edmund Tetteh

% Define new hourly wind speed values (in m/s)
hourly_wind_speeds = [9.3, 7.2, 6.2, 6.7, 5.7, 6.2, 4.6, 6.2, 6.2, 5.7, 5.1, 7.7, 1.5];

% Sample data points (3 elements each)
wind_speed = [5.1, 6.1, 6.5]; % Example x-values
voltage = [5.1, 5.6, 5.8]; % Corresponding y-values

% Fit a polynomial of degree 2 (quadratic) to the data points
p = polyfit(wind_speed, voltage, 2);

% Define the range for extrapolation ensuring the max voltage does not exceed 15V
max_voltage = 15;
max_wind_speed = fzero(@(x) polyval(p, x) - max_voltage, [6.5, 25]); % Find the wind speed where voltage reaches max_voltage
x_extrapolate = 5:0.1:max_wind_speed; % Range for extrapolation

% Use the polynomial to extrapolate y-values
y_extrapolate = polyval(p, x_extrapolate);

% Plot the original data points
figure;
plot(wind_speed, voltage, 'bo', 'MarkerFaceColor', 'b'); % Original Data
hold on;

% Plot the extrapolated values
plot(x_extrapolate, y_extrapolate, 'r--'); % Extrapolated Data

% Add labels and legend
xlabel('Wind Speed (m/s)');
ylabel('Voltage (V)');
title('Extrapolation of Wind Speed and Voltage Relationship');
legend('Original Data', 'Extrapolated Data');

% Display the polynomial equation on the graph
eq_str = sprintf('y = %.2fx^2 + %.2fx + %.2f', p(1), p(2), p(3));
text(6, 14, eq_str, 'FontSize', 10, 'Color', 'k');

% Generate random wind speed values to simulate real conditions
random_wind_speeds = 5 + (max_wind_speed-5).*rand(1, 10); % Generate 10 random values between 5 and max_wind_speed
random_voltages = polyval(p, random_wind_speeds); % Calculate corresponding voltages

% Plot the simulated wind speed values
plot(random_wind_speeds, random_voltages, 'go', 'MarkerFaceColor', 'g'); % Simulated Data
legend('Original Data', 'Extrapolated Data', 'Simulated Data');

% Calculate R-squared value
y_fit = polyval(p, wind_speed); % Predicted values for the original data
SS_res = sum((voltage - y_fit).^2); % Residual sum of squares
SS_tot = sum((voltage - mean(voltage)).^2); % Total sum of squares
R_squared = 1 - (SS_res / SS_tot); % R-squared value

% Display the polynomial equation and R-squared value in the command window
disp('Fitted Polynomial Coefficients:');
disp(p);
disp('R-squared value:');
disp(R_squared);

% Calculate the corresponding voltage for each wind speed
hourly_voltages = polyval(p, hourly_wind_speeds);

% Generator rating
generator_rating = 350; % in Watts

% Calculate power output
hourly_power_output = (hourly_voltages / max(hourly_voltages)) * generator_rating;

% Plotting the results
figure;

% Plot Wind Speed vs Voltage
subplot(3, 1, 1);
plot(1:length(hourly_wind_speeds), hourly_wind_speeds, 'b-o', 'MarkerFaceColor', 'b');
xlabel('Time (Hours)');
ylabel('Wind Speed (m/s)');
title('Hourly Wind Speed');
xticks(1:length(hourly_wind_speeds));
xticklabels({'5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM', '1 AM', '2 AM', '3 AM', '4 AM', '5 AM'});

subplot(3, 1, 2);
plot(1:length(hourly_voltages), hourly_voltages, 'r-o', 'MarkerFaceColor', 'r');
xlabel('Time (Hours)');
ylabel('Voltage (V)');
title('Hourly Voltage');
xticks(1:length(hourly_wind_speeds));
xticklabels({'5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM', '1 AM', '2 AM', '3 AM', '4 AM', '5 AM'});

% Plot energy generated each hour by wind turbine
subplot(3, 1, 3);
plot(1:length(hourly_power_output), hourly_power_output, 'k-o', 'MarkerFaceColor', 'k');
xlabel('Time (Hours)');
ylabel('Energy Generated (Wh)');
title('Hourly Energy Generated by Wind Turbine');
xticks(1:length(hourly_wind_speeds));
xticklabels({'5 PM', '6 PM', '7 PM', '8 PM', '9 PM', '10 PM', '11 PM', '12 AM', '1 AM', '2 AM', '3 AM', '4 AM', '5 AM'});

% Display the polynomial equation in the command window
disp('Fitted Polynomial Coefficients:');
disp(p);

% Calculate average energy generated
avg_energy_generated_Wh = mean(hourly_power_output);

fprintf('Average energy generated: %.2f Wh\n', avg_energy_generated_Wh);

% Mark maximum values on the plots
[max_wind_speed_value, max_wind_speed_idx] = max(hourly_wind_speeds);
[max_voltage_value, max_voltage_idx] = max(hourly_voltages);
[max_power_value, max_power_idx] = max(hourly_power_output);

subplot(3, 1, 1);
hold on;
plot(max_wind_speed_idx, max_wind_speed_value, 'ks', 'MarkerSize', 8, 'MarkerFaceColor', 'k');
text(max_wind_speed_idx, max_wind_speed_value, sprintf('Max'));
